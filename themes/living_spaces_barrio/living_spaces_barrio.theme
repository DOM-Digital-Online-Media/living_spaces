<?php

/**
 * @file
 * Functions to support theming in the Living Spaces Barrio subtheme.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Render\Element\Dropbutton;
use Drupal\Core\Render\Element\Operations;
use Drupal\living_spaces_barrio\LivingSpacesBarrioTrustedCallbacks;

/**
 * Implements hook_page_attachments_alter().
 */
function living_spaces_barrio_page_attachments_alter(array &$attachments) {
  $route_name = \Drupal::service('current_route_match')->getRouteName();

  if ('entity.view.edit_form' == $route_name) {
    $attachments['#attached']['library'][] = 'living_spaces_barrio/view_buttons';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function living_spaces_barrio_theme_suggestions_form_element_alter(array &$suggestions, array $variables, $hook) {
  if (isset($variables['element']['#type'])) {
    $suggestions[] = $hook . '__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function living_spaces_barrio_theme_suggestions_form_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'form' & !empty($variables['element']['#form_id'])) {
    $suggestions[] = 'form__' . str_replace('-', '_', $variables['element']['#form_id']);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function living_spaces_barrio_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#type'] == 'submit' &&
    theme_get_setting('bootstrap_barrio_button') &&
    !empty($variables['element']['#id'])
  ) {
    $suggestions[] = 'input__submit_button';
    $suggestions[] = 'input__submit_button__' . str_replace('-', '_', $variables['element']['#id']);
  }
}

/**
 * Implements hook_preprocess_page_title().
 */
function living_spaces_barrio_preprocess_page_title(&$variables) {
  $exist = &drupal_static(__FUNCTION__);

  $title = $variables['title'];
  $variables['title'] = '';

  if (!isset($exist)) {
    $variables['title'] = $title;
    $exist = TRUE;
  }
}

/**
 * Implements hook_element_info_alter().
 */
function living_spaces_barrio_element_info_alter(array &$info) {
  $elements = [
    'dropbutton' => Dropbutton::class,
    'operations' => Operations::class,
  ];

  foreach ($elements as $element => $class) {
    if (!empty($info[$element])) {
      foreach ($info[$element]['#pre_render'] as $key => $value) {
        // Override default dropbutton and operations pre render.
        if (is_array($value) && $value[0] === $class) {
          unset($info[$element]['#pre_render'][$key]);
        }
      }
      $info[$element]['#pre_render'][] = [LivingSpacesBarrioTrustedCallbacks::class, 'preRenderDropbutton'];
    }
  }
}

/**
 * Implements hook_views_ui_display_tab_alter().
 */
function living_spaces_barrio_views_ui_display_tab_alter(&$build, \Drupal\views_ui\ViewUI $view, $display_id) {
  // @todo Move this to view_edit_form form alter when
  // https://www.drupal.org/project/drupal/issues/3087455 is resolved.
  if (!empty($build['details']['columns'])) {
    $columns = &$build['details']['columns'];
    foreach (Element::children($columns) as $col_key) {
      foreach (Element::children($columns[$col_key]) as $el_key) {
        if (!empty($columns[$col_key][$el_key]['#actions']['#links'])) {
          foreach ($columns[$col_key][$el_key]['#actions']['#links'] as &$link) {

            // Fix for views ui dropdowns on view edit screen. Remove classes
            // that break default bootstrap dropdown styles.
            // @see \Drupal\views_ui\ViewEditForm::getFormBucket()
            foreach ($link['attributes']['class'] ?? [] as $i => $class) {
              $link['attributes']['class'][$i] = str_replace('icon compact ', '', $class);
            }
          }

          // Apply small bootstrap dropdown styling instead.
          $columns[$col_key][$el_key]['#actions']['#dropbutton_type'] = 'small';
        }
      }
    }
  }
}

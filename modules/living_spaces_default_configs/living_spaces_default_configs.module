<?php

/**
 * @file
 * Contains living_spaces_default_configs.module.
 */

use Drupal\Core\Config\ExtensionInstallStorage;
use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Config\StorageInterface;

/**
 * Implements hook_module_implements_alter().
 */
function living_spaces_default_configs_module_implements_alter(&$implementations, $hook) {
  // Preinstall hook should be run before the config_rewrite one to make sure
  // option config exists before it tries to rewrite it.
  if (($hook == 'module_preinstall')
&& isset($implementations['living_spaces_default_configs'])) {
    $group = $implementations['living_spaces_default_configs'];
    unset($implementations['living_spaces_default_configs']);
    $implementations = ['living_spaces_default_configs' => $group] + $implementations;
  }
}

/**
 * Implements hook_module_preinstall().
 */
function living_spaces_default_configs_module_preinstall($module) {
  // Optional configs that should exist before our modules want to rewrite them,
  // so we import them before install if they do not exist.
  $module_rewrites = [
    'living_spaces_group' => [
      'views.view.group_members'
    ],
    'living_spaces_activity' => [
      'views.view.message'
    ],
    'living_spaces_changelog' => [
      'views.view.content'
    ],
  ];

  if (!isset($module_rewrites[$module])) {
    return;
  }
  $configs = $module_rewrites[$module];

  foreach ($configs as $config_name) {
    $config = \Drupal::configFactory()->getEditable($config_name);
    if (!$config->getRawData()) {
      $optional_storage = new ExtensionInstallStorage(
        \Drupal::service('config.storage'),
        InstallStorage::CONFIG_OPTIONAL_DIRECTORY,
        StorageInterface::DEFAULT_COLLECTION,
        false,
        'living_spaces'
      );
      $config->setData($optional_storage->read($config_name))->save(TRUE);
    }
  }
}

<?php

/**
 * @file
 * Contains functions and hooks for living_spaces_menus.module.
 */

use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;

/**
 * Implements hook_collapsible_menu_alter().
 */
function living_spaces_menus_dom_bootstrap_collapsible_menu_alter(&$build) {
  $spaces_menu_key = 'menu_link_content:436e7a5e-7eb0-4ba7-928c-b9064865f174';

  $user = \Drupal::entityTypeManager()
    ->getStorage('user')
    ->load(\Drupal::currentUser()->id());

  $user_favorite_spaces = [];
  $user_preferred_spaces = [];
  $user_joined_spaces = [];
  $max_total = 8;

  if ($user->hasField('field_favorite_spaces')) {
    foreach ($user->get('field_favorite_spaces')->getValue() as $item) {
      $user_favorite_spaces[] = $item['target_id'];
    }
  }

  if ($user->hasField('preferred_spaces')) {
    foreach ($user->get('preferred_spaces')->getValue() as $item) {
      if (!in_array($item['target_id'], $user_favorite_spaces)) {
        $user_preferred_spaces[] = $item['target_id'];
      }
    }
  }

  if ($user->hasField('joined_spaces')) {
    foreach ($user->get('joined_spaces')->getValue() as $item) {
      if (!in_array($item['target_id'], $user_favorite_spaces) && !in_array($item['target_id'], $user_preferred_spaces))
        $user_joined_spaces[] = $item['target_id'];
    }
  }

  $links = [];
  $top_items = array_merge($user_favorite_spaces, $user_preferred_spaces);

  if ($top_items) {
    $groups_favorite = \Drupal::entityTypeManager()
      ->getStorage('group')
      ->loadMultiple($top_items);

    if ($groups_favorite) {
      foreach ($groups_favorite as $item) {
        $links['living_spaces_menus.space:' . $item->id()] = [
          'is_expanded' => FALSE,
          'is_collapsed' => FALSE,
          'in_active_trail' => FALSE,
          'attributes' => new Attribute(),
          'title' => $item->label(),
          'url' => Url::fromRoute('entity.group.canonical', ['group' => $item->id()]),
          'below' => [],
        ];
      }

      $links['living_spaces_menus.items_delimiter'] = [
        'put_delimiter' => TRUE,
      ];
    }
  }

  $group_ids = \Drupal::entityTypeManager()
    ->getStorage('group')
    ->getQuery()
    ->accessCheck()
    ->condition('id', $user_joined_spaces, 'IN')
    ->sort('label', 'ASC')
    ->range(0, ($max_total - count($top_items)))
    ->execute();

  if ($group_ids) {
    $groups = \Drupal::entityTypeManager()
      ->getStorage('group')
      ->loadMultiple($group_ids);

    foreach ($groups as $item) {
      $links['living_spaces_menus.space:' . $item->id()] = [
        'is_expanded' => FALSE,
        'is_collapsed' => FALSE,
        'in_active_trail' => FALSE,
        'attributes' => new Attribute(),
        'title' => $item->label(),
        'url' => Url::fromRoute('entity.group.canonical', ['group' => $item->id()]),
        'below' => [],
      ];
    }
  }

  if ($links) {
    array_push($links, end($build['#items'][$spaces_menu_key]['below']));

    $build['#items'][$spaces_menu_key]['below'] = $links;
    $build['#cache']['tags'] = ['user:' . \Drupal::currentUser()->id()];
  }
}

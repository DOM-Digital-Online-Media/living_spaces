<?php

/**
 * @file
 * Contains functions and hooks for living_spaces_discussions.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Breadcrumb\Breadcrumb;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\group\Entity\GroupRelationshipInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Form\FormStateInterface;
use \Drupal\comment\CommentInterface;

/**
 * Implements hook_entity_bundle_info_alter().
 */
function living_spaces_discussions_entity_bundle_info_alter(&$bundles) {
  if (isset($bundles['living_spaces_section']['discussions'])) {
    $bundles['living_spaces_section']['discussions']['class'] = 'Drupal\living_spaces_discussions\Entity\LivingSpacesDiscussions';
  }
}

/**
 * Implements hook_living_spaces_sections_content_alter().
 */
function living_spaces_discussions_living_spaces_sections_content_alter(GroupRelationshipInterface $relationship, &$section) {
  if ($relationship->getEntity() instanceof NodeInterface &&
    'discussion_post' == $relationship->getEntity()->bundle() &&
    $data = \Drupal::service('living_spaces_sections.manager')->getSectionFromGroupByType($relationship->getGroup(), 'discussions')
  ) {
    $section = $data;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function living_spaces_discussions_form_node_discussion_post_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#submit'][] = 'living_spaces_discussions_discussion_post_form_submit';
}

/**
 * Provides submit callback for discussion post form.
 */
function living_spaces_discussions_discussion_post_form_submit(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\group\Entity\GroupInterface $group */
  $group = $form_state->get('group');

  /** @var \Drupal\living_spaces_sections\Entity\LivingSpacesSectionInterface $section */
  if ($group && $section = \Drupal::service('living_spaces_sections.manager')->getSectionFromGroupByType($group, 'discussions')) {
    if ($section->access('view')) {
      $form_state->setRedirectUrl($section->toUrl());
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function living_spaces_discussions_comment_access(CommentInterface $comment, $operation, AccountInterface $account) {
  $result = AccessResult::neutral();

  $entity = $comment->getCommentedEntity();
  if ('node' == $entity->getEntityTypeId() &&
    'discussion_post' == $entity->bundle() &&
    in_array($operation, ['update', 'delete']) &&
    $comment->getOwnerId() == $account->id()
  ) {
    $result = AccessResult::allowed();
  }

  return $result;
}

/**
 * Implements hook_living_spaces_breadcrumbs_info().
 */
function living_spaces_discussions_living_spaces_breadcrumbs_info(RouteMatchInterface $route_match, Breadcrumb $breadcrumb = NULL) {
  $applies = FALSE;

  if (in_array($route_match->getRouteName(), ['entity.node.canonical', 'entity.node.edit_form', 'entity.node.delete_form'])) {
    $parameters = $route_match->getParameters()->all();

    /** @var \Drupal\node\NodeInterface $node */
    $node = $parameters['node'];

    if ('discussion_post' == $node->bundle()) {
      $applies = TRUE;

      if (!empty($breadcrumb)) {
        if ($group = $node->get('space')->entity) {
          $breadcrumb->addLink($group->toLink($group->label()));
          $breadcrumb->addCacheableDependency($group);
        }

        if ($group && $section = \Drupal::service('living_spaces_sections.manager')->getSectionFromGroupByType($group, 'discussions')) {
          $breadcrumb->addLink(Link::createFromRoute($section->getTabLabel(), 'living_spaces_sections.section_view', ['group' => $group->id(), 'section' => $section->getPath()]));
        }
        else {
          $breadcrumb->addLink(Link::createFromRoute(t('Discussions'), '<none>'));
        }

        $prefix = $route_match->getRouteName() == 'entity.node.edit_form' ? t('Edit') . ' ' : '';

        $breadcrumb->addLink(Link::createFromRoute($prefix . $node->label(), '<none>'));
        $breadcrumb->addCacheableDependency($node);
      }
    }
  }

  return $applies;
}

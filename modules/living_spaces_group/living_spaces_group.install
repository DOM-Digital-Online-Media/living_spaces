<?php

/**
 * @file
 * Install/update/uninstall hooks for group module.
 */

/**
 * Implements hook_uninstall().
 */
function living_spaces_group_uninstall() {
  // Delete preinstalled content.
  $link_storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');
  $link = $link_storage
    ->loadByProperties(['uuid' => [
      '21f299cd-b60c-4983-b863-879297d3bcd3',
      '9a19c43c-7cd4-4139-9f5c-ec8301aeabf3',
    ]]);
  if (!empty($link)) {
    $link_storage->delete($link);
  }
}

/**
 * Add a new menu link to the main menu.
 */
function living_spaces_group_update_9001(&$sandbox) {
  $link_storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');

  $menu_link = $link_storage->create([
    'title' => 'Spaces',
    'link' => ['uri' => 'internal:/admin/group/spaces'],
    'menu_name' => 'main',
  ]);
  $menu_link->save();
}

/**
 * Set undefined field_allow_admin_to_edit_member to TRUE.
 *
 * Set field_allow_admin_to_edit_member to TRUE if it not set already
 * for space types 'project_space' and 'department'
 * to allow space admins to edit space members profile.
 */
function living_spaces_group_update_9101(&$sandbox) {
  $entityStorage = \Drupal::entityTypeManager()->getStorage('group');
  $query = $entityStorage->getQuery();
  $query->accessCheck(FALSE);
  $query->condition('type', ['project_space', 'department'], 'IN');
  $query->notExists('field_allow_admin_to_edit_member');
  $gids = $query->execute();
  foreach ($entityStorage->loadMultiple($gids) as $group) {
    if ($group->hasField('field_allow_admin_to_edit_member')) {
      $group->set('field_allow_admin_to_edit_member', TRUE);
      $group->save();
    }
    else {
      throw new Exception("There is no field 'field_allow_admin_to_edit_member' in the group type '{$group->getGroupType()->id()}'.");
    }
  }
}

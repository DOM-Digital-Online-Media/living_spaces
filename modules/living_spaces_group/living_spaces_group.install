<?php

/**
 * @file
 * Install/update/uninstall hooks for group module.
 */

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_uninstall().
 */
function living_spaces_group_uninstall() {
  // Delete preinstalled content.
  $link_storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');
  $link = $link_storage
    ->loadByProperties(['uuid' => [
      '21f299cd-b60c-4983-b863-879297d3bcd3',
      '9a19c43c-7cd4-4139-9f5c-ec8301aeabf3',
    ]]);
  if (!empty($link)) {
    $link_storage->delete($link);
  }
}

/**
 * Add a new menu link to the main menu.
 */
function living_spaces_group_update_9001(&$sandbox) {
  $link_storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');

  $menu_link = $link_storage->create([
    'title' => 'Spaces',
    'link' => ['uri' => 'internal:/admin/group/spaces'],
    'menu_name' => 'main',
  ]);
  $menu_link->save();
}

/**
 * Add a field 'space' to entity types with enabled living space functionality.
 */
function living_spaces_group_update_9009(&$sandbox) {

  $types = Drupal::service('living_spaces_group.manager')->getLivingSpaceGroupTypes();
  $entity_ids = [];
  foreach ($types as $type) {
    /** @var \Drupal\group\Entity\GroupContentType[] $group_content_types */
    $group_content_types = \Drupal::entityTypeManager()
      ->getStorage('group_content_type')
      ->loadByProperties(['group_type' => $type]);
    foreach ($group_content_types as $group_content_type) {
      $plugin = $group_content_type->getContentPlugin();
      $entity_id = $plugin->getEntityTypeId();
      $entity_ids[$entity_id] = $entity_id;
    }
  }

  foreach ($entity_ids as $entity_id) {
    $field_definition = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Space'))
      ->setSetting('target_type', 'group')
      ->setTranslatable(FALSE);
    \Drupal::entityDefinitionUpdateManager()
      ->installFieldStorageDefinition('space', $entity_id, 'living_spaces_group', $field_definition);
  }

}

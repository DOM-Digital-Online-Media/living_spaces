<?php

/**
 * @file
 * Install/update/uninstall hooks for event module.
 */

use Drupal\comment\CommentInterface;
use Drupal\comment\CommentManagerInterface;
use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_install().
 */
function living_spaces_event_install() {
  \Drupal::service('theme_installer')->install(['bootstrap_barrio']);
}

/**
 * Implements hook_uninstall().
 */
function living_spaces_event_uninstall($is_syncing) {
  // Delete preinstalled content.
  $taxonomy_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  $term = $taxonomy_storage
    ->loadByProperties(['uuid' => [
      '3ae0c24b-826e-418b-8d40-40f65ad843de',
      '4c8fdc19-dd01-4104-b540-005a4062a65a',
      '4ff35c2a-1d0a-401a-80f3-929e07931ea1',
      '6ac8691c-87d5-49f6-882e-46398be6d119',
      '70ed9d67-f5df-428a-8ebb-2b0276e826fd',
      '73f46fe8-82f5-40a3-82a3-ddde450a285b',
      'c9e45cef-15e9-4d9e-92c9-cd67dbf1fcae',
    ]]);
  if (!empty($term)) {
    $taxonomy_storage->delete($term);
  }
}

/**
 * Add new field for invited spaces/users.
 */
function living_spaces_event_update_9001() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $fields = [
    [
      'name' => t('Invited spaces'),
      'machine_name' => 'invited_spaces',
      'target' => 'group',
    ],
    [
      'name' => t('Invited users'),
      'machine_name' => 'invited_users',
      'target' => 'user',
    ],
  ];

  foreach ($fields as $field) {
    $definition = BaseFieldDefinition::create('entity_reference')
      ->setLabel($field['name'])
      ->setSetting('target_type', $field['target'])
      ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
      ->setDisplayOptions('form', [
        'type' => 'entity_reference_autocomplete',
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => 60,
          'placeholder' => '',
        ],
      ])
      ->setDisplayConfigurable('form', TRUE);

    $definition_update_manager->installFieldStorageDefinition($field['machine_name'], 'living_spaces_event', 'living_spaces_event', $definition);
  }
}

/**
 * Add description field for event entity type.
 */
function living_spaces_event_update_9002() {
  $definition = BaseFieldDefinition::create('text_long')
    ->setLabel(t('Description'))
    ->setTranslatable(FALSE)
    ->setDisplayOptions('form', [
      'type' => 'text_textarea',
      'settings' => [
        'rows' => '5',
        'placeholder' => '',
      ],
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('description', 'living_spaces_event', 'living_spaces_event', $definition);
}

/**
 * Add comment field for event entity type.
 */
function living_spaces_event_update_9003() {
  $definition = BaseFieldDefinition::create('comment')
    ->setLabel(t('Comments'))
    ->setSettings([
      'comment_type' => 'event',
      'locked' => FALSE,
      'default_mode' => CommentManagerInterface::COMMENT_MODE_THREADED,
      'per_page' => 50,
      'form_location' => CommentItemInterface::FORM_BELOW,
      'anonymous' => CommentInterface::ANONYMOUS_MAYNOT_CONTACT,
      'preview' => DRUPAL_OPTIONAL,
    ])
    ->setDefaultValue([
      'status' => CommentItemInterface::OPEN,
      'cid' => 0,
      'last_comment_timestamp' => 0,
      'last_comment_name' => NULL,
      'last_comment_uid' => 0,
      'comment_count' => 0,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('comment', 'living_spaces_event', 'living_spaces_event', $definition);
}

/**
 * Add new field for the user who send invite.
 */
function living_spaces_event_update_9004() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $definition = BaseFieldDefinition::create('entity_reference')
    ->setLabel('Inviter')
    ->setSetting('target_type', 'user')
    ->setDisplayOptions('form', [
      'type' => 'entity_reference_autocomplete',
      'settings' => [
        'match_operator' => 'CONTAINS',
        'size' => 60,
        'placeholder' => '',
      ],
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setTranslatable(FALSE);

  $definition_update_manager->installFieldStorageDefinition('inviter', 'living_spaces_event_invite', 'living_spaces_event', $definition);
}

